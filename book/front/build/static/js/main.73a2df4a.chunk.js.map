{"version":3,"sources":["App.js","serviceWorker.js","components/login.js","components/register.js","components/addBook.js","index.js"],"names":["App","props","state","books","axios","defaults","headers","common","localStorage","getItem","get","then","res","setState","data","catch","error","response","status","history","push","removeItem","window","location","reload","class","onClick","this","logout","map","book","title","author","description","to","className","Component","Boolean","hostname","match","Login","onChange","e","target","name","value","onSubmit","preventDefault","username","password","post","setItem","token","console","log","message","bind","role","for","type","placeholder","required","Register","result","addBook","published_date","publisher","update_date","setTimeout","Date","now","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73a2df4a.chunk.js","sourcesContent":["import React, { Component} from 'react';\n// import logo from './logo.svg';\nimport './App1.css';\nimport axios from \"axios\";\nimport {Link} from 'react-router-dom';\n\n//var createReactClass = require('create-react-class');\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: []\n    }\n  }\n  componentDidMount() {\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken');\n    axios.get('/book')\n    .then((res) => {\n      this.setState({ books: res.data})\n      //console.log(this.state.books)\n    })\n    .catch((error) => {\n      if(error.response.status === 401) {\n        this.props.history.push('/login')\n      }\n    });\n  }\n  logout(){\n    localStorage.removeItem('jwtToken');\n    window.location.reload();\n  }\n  render(){\n    return(\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3>List of Books</h3>\n            <button class=\"btn btn-primary btn-large logoutbtn\" onClick={this.logout}>\n              Logout\n            </button>\n          </div>\n          <div class=\"panel-body\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Author</th>\n                  <th>Description</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.books.map((book) => {\n                  return(\n                  <tr>\n                    <td>{book.title}</td>\n                    <td>{book.author}</td>\n                    <td>{book.description}</td>\n                    <hr/>\n                  </tr>\n                )})}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div>\n          <Link to=\"/addBook\">\n          <button className=\"btn btn-primary btn-large addbtn\">Add Books</button> \n          </Link>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport './login.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            message: ''\r\n        };\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const state = this.state;\r\n        state[e.target.name] = e.target.value\r\n        this.setState(state);\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {username,password} = this.state;\r\n        axios.post('/auth/login', {username, password})\r\n        .then((response)=>{\r\n            //console.log(\"Here\");\r\n            if(response.status !== 401){\r\n            localStorage.setItem('jwtToken', response.data.token);\r\n            console.log(response.data.token)\r\n            this.props.history.push('/');\r\n            //axios.request('/',{headers: {'abc':'def'}})\r\n            // .then((res)=>{\r\n                \r\n            // })\r\n            \r\n        }\r\n            else{\r\n                console.log(\"Error\")\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            if(error.response.status === 401){\r\n                console.log(\"Error from here\");\r\n                this.setState({message: \"Login failed. You are not authorised \"})\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {username, password, message} = this.state;\r\n        return(\r\n            <div class=\"container\">\r\n                <form onSubmit = {this.onSubmit}>\r\n                {message !== '' && <div class=\"alert alert-warning alert-dismissible\" role=\"alert\">{message}</div>}\r\n                    <h1 class=\"form-signin-headin\">Please Login</h1>\r\n                    <label for=\"inputEmail\" class=\"sr-only\">Email Address</label>\r\n                    <input type=\"email\" class=\"form-control\" placeholder=\"Enter Email Address\" name=\"username\" value={username} onChange={this.onChange} required></input>\r\n                    <label for=\"inputPassword\" class=\"sr-only\">Password</label>\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter Password\" name=\"password\" value={password} onChange={this.onChange} required></input>\r\n                    <button class=\"btn btn-large btn-primary btn-block\" type=\"submit\">Login</button>\r\n                    <p>\r\n                        Not a member?  \r\n                        <Link to=\"/register\">Register</Link>\r\n                    </p>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React,{Component} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Register extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        };\r\n    }\r\n    onChange = (e) => {\r\n        const state = this.state;\r\n        state[e.target.name] = e.target.value;\r\n        this.setState(state);\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {username,password} = this.state;\r\n\r\n        axios.post('/auth/register', {username,password})\r\n        .then((result)=>{\r\n            this.props.history.push('/login')\r\n        })\r\n    }\r\n    render(){\r\n        const {username, password} = this.state;\r\n        return(\r\n            <div class=\"container\">\r\n                <form onSubmit = {this.onSubmit}>\r\n                    <h2 class=\"form-signin-headin\">Please Register</h2>\r\n                    <label for=\"inputEmail\" class=\"sr-only\">Email Address</label>\r\n                    <input type=\"email\" class=\"form-control\" placeholder=\"Enter Email Address\" name=\"username\" value={username} onChange={this.onChange} required></input>\r\n                    <label for=\"inputPassword\" class=\"sr-only\">Password</label>\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter Password\" name=\"password\" value={password} onChange={this.onChange} required></input>\r\n                    <button class=\"btn btn-large btn-primary btn-block\" type=\"submit\">Register</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import React,{Component} from 'react';\nimport axios from 'axios';\nimport './addBook.css';\n\nclass addBook extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          title: '',\n          author: '',\n          description: '',\n          published_date: Date.now,\n          publisher: '',\n          update_date: Date.now,\n          message: ''\n        }\n      }\n      componentDidMount() {\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken');\n        axios.get('/book')\n        .then((res) => {\n          //console.log(this.state.books)\n        })\n        .catch((error) => {\n          if(error.response.status === 401) {\n            this.props.history.push('/login')\n          }\n        });\n      }\n\n      onChange = (e) => {\n        const state = this.state;\n        state[e.target.name] = e.target.value\n        this.setState(state);\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const {title,author,description,published_date,publisher,update_date} = this.state;\n        axios.post('/book', {title,author,description,published_date,publisher,update_date})\n        .then((response)=>{\n            //console.log(\"Here\");\n            if(response.status !== 401){\n            this.setState({message: \"Insertion Successful\"})\n            //axios.request('/',{headers: {'abc':'def'}})\n            // .then((res)=>{\n                \n            // })\n\n            setTimeout(()=> {this.props.history.push('/')},3000)\n            \n        }\n            else{\n                console.log(\"Error\")\n            }\n        })\n        .catch((error)=>{\n            if(error.response.status === 401){\n                this.setState({message: \"You are not authorised \"})\n            }\n\n        })\n    }\n\n      render() {\n        const {title,author,description,published_date,publisher,update_date,message} = this.state;\n        return(<div class=\"container\">\n            <form onSubmit={this.onSubmit}>\n            {message !== '' && <div class=\"alert alert-warning alert-dismissible\" role=\"alert\">{message}</div>}\n                <h2 class=\"form-signin-headin\">Enter Book Details</h2>\n                <label for=\"inputTitle\" class=\"sr-only\">Book Title</label>\n                    <input type=\"string\" class=\"form-control\" placeholder=\"Enter Book Title\" name=\"title\" value={title} onChange={this.onChange} required></input>\n                <label for=\"inputAuthor\" class=\"sr-only\">Author</label>\n                    <input type=\"string\" class=\"form-control\" placeholder=\"Enter Author's Name\" name=\"author\" value={author} onChange={this.onChange} required></input>\n                <label for=\"inputDescription\" class=\"sr-only\">Description</label>\n                    <input type=\"string\" class=\"form-control\" placeholder=\"Enter Book Description\" name=\"description\" value={description} onChange={this.onChange} required></input>\n                <label for=\"inputPublishedDate\" class=\"sr-only\">Published Date</label>\n                    <input type=\"date\" class=\"form-control\" placeholder=\"Enter date of Publishion\" name=\"published_date\" value={published_date} onChange={this.onChange} required></input>\n                <label for=\"inputPublisher\" class=\"sr-only\">Publisher</label>\n                    <input type=\"string\" class=\"form-control\" placeholder=\"Enter name of Publisher\" name=\"publisher\" value={publisher} onChange={this.onChange} required></input>\n                <label for=\"inputUpdateDate\" class=\"sr-only\">Update Date</label>\n                    <input type=\"date\" class=\"form-control\" placeholder=\"Enter date of Updation\" name=\"update_date\" value={update_date} onChange={this.onChange}></input>\n                <button class=\"btn btn-primary btn-block\" type=\"submit\">Submit</button>\n            </form>\n        </div>)\n      }\n}\n\nexport default addBook;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Login from './components/login';\nimport Register from './components/register';\nimport addBook from './components/addBook';\n\n\nReactDOM.render(\n    <Router>\n        <div>\n            <Route exact path=\"/\" component={App}/>\n            <Route exact path=\"/login\" component={Login}/>\n            <Route exact path=\"/register\" component={Register}/>\n            <Route exact path=\"/addBook\" component={addBook}/>\n\n        </div>\n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}